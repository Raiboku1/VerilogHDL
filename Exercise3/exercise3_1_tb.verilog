module exercise3_1_tb;
reg a, b;
wire y_buf, y_nand, y_xnor;

exercise3_1_buf_gate buf_inst(.a(a), .y(y_buf)); // Corrected instantiation
exercise3_1_nand_gate nand_inst(.a(a), .b(b), .y(y_nand));
exercise3_1_xnor_gate xnor_inst(.a(a), .b(b), .y(y_xnor));

initial begin
$display("BUF gate truth table:");
$display("---------------------");
$display("a | y");
a = 0; #1;
$display(a," | ",y_buf);
a = 1; #1;
$display(a," | ",y_buf);
$display("\n");

$display("NAND gate truth table:");
$display("----------------------");
$display("a | b | y");
a = 0; b = 0; #1;
$display(a," | ",b," | ",y_nand);
a = 0; b = 1; #1;
$display(a," | ",b," | ",y_nand);
a = 1; b = 0; #1;
$display(a," | ",b," | ",y_nand);

a = 1; b = 1; #1;
$display(a," | ",b," | ",y_nand);
$display("\n");

$display("XNOR gate truth table:");
$display("----------------------");
$display("a | b | y");
$display("--|---|---");
a = 0; b = 0; #1;
$display(a," | ",b," | ",y_xnor);
a = 0; b = 1; #1;
$display(a," | ",b," | ",y_xnor);
a = 1; b = 0; #1;
$display(a," | ",b," | ",y_xnor);
a = 1; b = 1; #1;
$display(a," | ",b," | ",y_xnor);
$finish;
end
endmodule